package FLxER.panels {	import flash.display.Sprite;	import flash.utils.getTimer;	import flash.events.*;	import flash.display.Loader;	import FLxER.comp.CheckBoxBase;	import FLxER.main.Rett;	import FLxER.comp.ButtonRett;	import FLxER.core.Player;	public class Preview extends Sprite {		var ch:uint;		var w:uint;		var h:uint;		var alt:String;		var fondo:Rett;		var fondino:Rett;		var myMask:Rett;		var mon_onoff,mon_playstop,mon_bkg:CheckBoxBase;		var dragButt:ButtonRett;		public var levels:Object;		//		var myAction:Array;		public var previewStatus:Boolean;		public function Preview(xx:int, yy:int, ww:uint, hh:uint, n:uint):void {			x = xx;			y = yy;			w = ww;			h = hh;			ch = n;			alt = n+1;			previewStatus = false			fondino = new Rett(0,0,w+2,h+2,0x333333,-1,1);;			this.addChild(fondino);			fondo = new Rett(1,1,w,h,0x000000,-1,1);;			this.addChild(fondo);			myMask = new Rett(1,1,w,h,0x000000,-1,1);;			this.addChild(myMask);			mon_onoff = new CheckBoxBase(46, 0, 11, 11, "PREVIEW: ", previewOnOff, null, false);			this.addChild(mon_onoff);			mon_playstop = new CheckBoxBase(46, 12, 11, 11, "PLAY: ", mon_play, null, false);			this.addChild(mon_playstop);			mon_bkg = new CheckBoxBase(46, 24, 11, 11, "BLACK BKG: ", bkg, null, false);			this.addChild(mon_bkg);			this.addEventListener(MouseEvent.MOUSE_DOWN,myDrag);			this.buttonMode = false;			this.mouseChildren = true;		}		public function initHandlerSWF(l:Loader):void {		}		public function initHandlerJPG(l:Loader):void {		}		public function initHandlerFLV(event:Event):void {		}		public function initHandlerMP3():void {		}		public function previewOnOff(val:Boolean):void {			this.parent.change_ch();			if (!levels) {				levels = new Object();				levels["ch_"+ch] = new Player(ch, w, h);				//levels["ch_"+ch].width = w;				//levels["ch_"+ch].height = h;				levels["ch_"+ch].x = 1;				levels["ch_"+ch].y = 1;				levels["ch_"+ch].myStopStatus = true;			}			if (val) {				this.addChild(levels["ch_"+ch]);				levels["ch_"+ch].mask = myMask;				previewStatus = true;			} else {				this.removeChild(levels["ch_"+ch]);				previewStatus = false;			}		}		public function mon_play(val:Boolean):void {			this.parent.change_ch();			if (val) {				mbuto("0,PLAY,"+ch)			} else {				mbuto("0,STOP,"+ch)			}		}		public function bkg(p:Boolean):void {			this.parent.change_ch();			if (p) {				parent.change_col(this.fondo, 0xFFFFFF);			} else {				parent.change_col(this.fondo, 0x000000);			}		}		public function mbuto(azione:String):void {			trace("MMmbuto"+azione);			myAction = azione.split(",");			trace("MMmbuto"+levels["ch_"+ch]);			levels["ch_"+myAction[2]][myAction[1]](myAction);		}		function myDrag(event:Event):void {			trace("myDrag")			stage.addEventListener(MouseEvent.MOUSE_UP,myDragStop);			var tmp			if (levels) {				if (this.parent.lockWipeStatus) {					levels["ch_"+ch].startDrag();				} else {					levels["ch_"+ch].cnt.startDrag();				}				stage.addEventListener(MouseEvent.MOUSE_MOVE,updateOut);			}		}		function myDragStop(s:String):void {			this.parent.change_ch();			stage.removeEventListener(MouseEvent.MOUSE_UP,myDragStop);			if (levels) {				stage.removeEventListener(MouseEvent.MOUSE_MOVE,updateOut);				if (this.parent.lockWipeStatus) {					levels["ch_"+ch].stopDrag();				} else {					levels["ch_"+ch].cnt.stopDrag();				}			}		}		function updateOut(event:Event):void {			/*			_root.myCtrl["ch_"+FlxerStarter.ch].monitor["mon"].ch_0.x = this["ch_"+FlxerStarter.ch].x;			_root.myCtrl["ch_"+FlxerStarter.ch].monitor["mon"].ch_0.y = this["ch_"+FlxerStarter.ch].y;			_root.myCtrl["ch_"+FlxerStarter.ch].monitor["mon"].ch_0.cnt.x = this["ch_"+FlxerStarter.ch].cnt.x;			_root.myCtrl["ch_"+FlxerStarter.ch].monitor["mon"].ch_0.cnt.y = this["ch_"+FlxerStarter.ch].cnt.y;			_root.myCtrl["ch_"+FlxerStarter.ch].myTrasform.x_m.val.text = this["ch_"+FlxerStarter.ch].cnt.x-200;			_root.myCtrl["ch_"+FlxerStarter.ch].myTrasform.y_m.val.text = this["ch_"+FlxerStarter.ch].cnt.y-150;			_root.myCtrl["ch_"+FlxerStarter.ch].myTrasform.x_ch.val.text = this["ch_"+FlxerStarter.ch].x;			_root.myCtrl["ch_"+FlxerStarter.ch].myTrasform.y_ch.val.text = this["ch_"+FlxerStarter.ch].y;			*/			if (this.parent.outStatus) {				parent.parent.parent.monitor.mbuto((getTimer()-Preferences.pref.lastTime)+",chMove,"+this.ch+","+(levels["ch_"+ch].x*(400/w))+","+(levels["ch_"+ch].y*(300/h))+","+levels["ch_"+ch].cnt.x+","+levels["ch_"+ch].cnt.y);			}		}	}}