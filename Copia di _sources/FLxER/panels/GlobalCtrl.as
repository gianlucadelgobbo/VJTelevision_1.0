package FLxER.panels {	import flash.display.Sprite;	import flash.display.StageQuality	import flash.system.fscommand;	import flash.net.navigateToURL;	import flash.net.URLRequest;	import flash.utils.getTimer;	import FLxER.comp.CheckBoxBase;	import FLxER.comp.ButtonTxt;	import FLxER.comp.SliderTxt;	import FLxER.main.Rett;	import FLxER.main.Txt;	import FLxER.panels.Recorder;	import FLxER.core.Midi;	public class GlobalCtrl extends Sprite {		var fondo:Rett;		var logo:Txt;		var puls0:CheckBoxBase;		var puls3,puls5,puls6:ButtonTxt;		var myMidi:Midi;		public var myRecorder:Recorder;		public var puls1,puls2,puls4:CheckBoxBase;		var myFps:SliderTxt;		var firstTime:Boolean = true;		public function GlobalCtrl():void {			Preferences.pref.myGlobalCtrl = this;			fondo = new Rett(0, 0, 800, 23, 0x808080, -1, .5);			this.addChild(fondo);			logo = new Txt(-1, -7, 0, 0, "FLxER.net", Preferences.pref.ts, "");			logo.scaleX = logo.scaleY=2			this.addChild(logo);			this.myFps = new SliderTxt(500, 11, 56, 11, "FPS", "fps", 25, changeFps, "alt", 0, 1, 100, true);			this.addChild(myFps);			puls0 = new CheckBoxBase(560, 11, 40, 11, "PREVIEW", myPreview, null, true);			this.addChild(puls0);						puls1 = new CheckBoxBase(puls0.x+puls0.width+4, 11, 21, 11, "HI-Q", myHQ, "H", true);			this.addChild(puls1);						puls2 = new CheckBoxBase(puls1.x+puls1.width+4, 11, 20, 11, "MIDI", midiOnOff, null, false);			this.addChild(puls2);						puls3 = new ButtonTxt(puls2.x+puls2.width+4, 11, 60, 11, "PREFERENCES", loadPref, null, null);			this.addChild(puls3);			Preferences.pref.myPreviewActive = true;						puls4 = new CheckBoxBase(puls3.x+puls3.width+4, 11, 53, 11, "FULLSCREEN", myFullscreen, "F", false);			this.addChild(puls4);						puls5 = new ButtonTxt(puls4.x+puls4.width+4, 11, 11, 11, "?", vaiHelp, null, "HELP");			this.addChild(puls5);						puls6 = new ButtonTxt(800-13, 11, 10, 11, "X", chiudi, null, "ALT + F4 // CTRL + Q");			this.addChild(puls6);						myRecorder = new Recorder(200);				this.addChild(myRecorder);		}		function changeFps(p:Number):void {			Preferences.pref.monitorTrgt.mbuto((getTimer()-Preferences.pref.lastTime)+",changeFps,0,"+p);		}		function myHQ(t:Boolean):void {			if (stage.quality == "LOW") {				stage.quality = "HIGH";			} else {				stage.quality = "LOW";			}		}		function myPreview(p:Boolean):void {			Preferences.pref.myPreviewActive = p			for (var a=0; a<Preferences.pref.nCh; a++) {				//trace("bella")				if (!p) {					Preferences.pref.monitorTrgt.levels["ch_"+a].eject(null);				} else {					Preferences.pref.interfaceTrgt.chCnt["ch_"+a].live(true);				}			}		}		function myFullscreen(p:Boolean):void {			parent.myFullscreen(p);			if (firstTime) {				var myAlert = new Mess(200, 150, "ALERT", "Don't forget the following keyboard shortcuts:\n\n- C to show channels control\n\n- SHIFT+C to show globals control\n\n- F to disable fullscreen mode");				parent.addChild(myAlert);				firstTime = false;			}		}		function chiudi(p:String):void {			fscommand("quit", "");		}		function vaiHelp(p:String):void {			navigateToURL(new URLRequest("http://wiki.flxer.net"),"_blank");		}		function midiOnOff(p:Boolean):void {			if (p) {				myMidi = new Midi();			} else {				myMidi = undefined;			}		}		public function loadPref(p:String):void {			var myPrefOption:PrefOption = new PrefOption(400, 300, "FLXER PREFERENCES", parent.savePref);			parent.addChild(myPrefOption);		}	}}